from stats import Stats
from requests_html import HTMLSession


class FangraphsApi:

    @staticmethod
    def hitter_projections():
        """
        Scrapes Fangraphs for today's projected stats for hitters
        :return: dictionary mapping hitter name to a Stats object
        """
        session = HTMLSession()
        r = session.post(
            "https://www.fangraphs.com/dailyprojections.aspx?pos=all&stats=bat&type=sabersim&team=0&lg=all&players=0",
            data={"__EVENTTARGET": "DFSBoard1$dg1",
                  "__EVENTARGUMENT": "FireCommand:DFSBoard1$dg1$ctl00;PageSize;500",
                  "__VIEWSTATE": ""})
        # need event target, event argument and viewstate... :(

        table = r.html.find("#DFSBoard1_dg1_ctl00", first=True)
        body = table.find("tbody", first=True)
        tr = body.find("tr")

        projections = {}
        for row in tr:
            cells = row.find("td")
            proj = FangraphsApi.row_to_hitter_projections(cells)
            name = cells[0].text
            projections[name] = proj

        return projections

    @staticmethod
    def row_to_hitter_projections(row):
        pa = float(row[4].text)
        h = float(row[5].text)
        hr = float(row[9].text)
        r = float(row[10].text)
        rbi = float(row[11].text)
        sb = float(row[12].text)
        bb = float(row[14].text)
        return Stats.hitter_stats(pa, h, hr, r, rbi, sb, bb)

    @staticmethod
    def pitcher_projections():
        """
        Scrapes Fangraphs for today's projected stats for pitchers
        :return: dictionary mapping Pitcher name to a Stats object
        """
        session = HTMLSession()
        r = session.get(
            "https://www.fangraphs.com/dailyprojections.aspx?pos=all&stats=pit&type=sabersim&team=0&lg=all&players=0")

        table = r.html.find("#DFSBoard1_dg1_ctl00", first=True)
        body = table.find("tbody", first=True)
        tr = body.find("tr")

        projections = {}
        for row in tr:
            cells = row.find("td")
            proj = FangraphsApi.row_to_pitcher_projections(cells)
            name = cells[0].text
            projections[name] = proj

        return projections

    @staticmethod
    def row_to_pitcher_projections(row):
        wins = float(row[3].text)
        ip = float(row[4].text)
        total_batters = float(row[5].text)
        hits = float(row[6].text)
        hr = float(row[10].text)
        walks = float(row[11].text)
        strikeouts = float(row[12].text)
        return Stats.pitcher_stats(wins, ip, total_batters, hits, hr, walks, strikeouts)
